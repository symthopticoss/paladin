<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<link rel="preconnect" href="https://fonts.gstatic.com">
	<link rel="shortcut icon" href="https://cdn.discordapp.com/attachments/987734229469253674/992747956056895508/Copy_of_Copy_of_Copy_of_EXAL_1024_1024px_SoundCloud_Banner_YouTube_Channel_Art_1000_1000px_27.png" />
	<title>Instances</title>
	<link href="../assets/css/new.css" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <!- LoadingBar Component Link ->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/nanobar/0.4.2/nanobar.js"></script>
</head>
 <script type="text/javascript">  
   // Heliactyl Load Time Checker
     var before_loadtime = new Date().getTime();  
     window.onload = Pageloadtime;  
     function Pageloadtime() {  
         var aftr_loadtime = new Date().getTime();  
         // Time calculating in seconds  
         pgloadtime = (aftr_loadtime - before_loadtime) / 1000  
  
         document.getElementById("loadtime").innerHTML = pgloadtime + "s";  
     }  
</script>  
<style>
h1 {
  font-size: 40px;
  background-image: linear-gradient(to right, #6565d6, #CB8000);
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
}
</style>

<body style="font-family: Inter; sans-serif;">
	<div class="wrapper">
		<div class="main">
			<nav style="background-image: url('https://cdn.discordapp.com/attachments/987734229469253674/1001803940062580826/27082020_5.png'); color: white; height: 120px;" class="navbar navbar-expand navbar-light navbar-bg">
				<a class="nav-item">
                   <img src="https://cdn.discordapp.com/attachments/987734229469253674/992747956056895508/Copy_of_Copy_of_Copy_of_EXAL_1024_1024px_SoundCloud_Banner_YouTube_Channel_Art_1000_1000px_27.png" style="width: 60px !important; height: 60px !important;">
                </a>

				<div class="navbar-collapse collapse">
					<ul class="navbar-nav navbar-align">
						<li class="nav-item dropdown">
							<a style="color: white; !important" class="nav-icon dropdown-toggle d-inline-block d-sm-none" href="#" data-bs-toggle="dropdown">
                <i class="align-middle text-white" data-feather="copy"></i>
              </a>

							<a class="nav-link dropdown-toggle d-none d-sm-inline-block text-white" href="#" data-bs-toggle="dropdown">
                <span class="text-white"><%= userinfo.username %>#<%= userinfo.discriminator %></span>
              </a>
							<div style="background-color: #45454B; border: 3px solid #565660;" class="dropdown-menu dropdown-menu-end">
								<a href="../logout" style="background-color: #45454B; color: white;" class="dropdown-item" >Logout</a>
            <script>
              let balance = document.getElementById("balance")
              balance.textContent = Math.floor(<%= coins %> * 100) / 100
            </script>
							</div>
						</li>
					</ul>
				</div>
			</nav>
			<nav style="background-color: #2B2B2D; color: white;" class="navbar navbar-expand navbar-light navbar-bg">
				<a class="nav-item">
                   <li style="text-decoration: none !important; color: white !important;" class="navbutton">
                     <a href="../dashboard" style="text-decoration: none !important; color: white !important;" class="navtext">
                       My Servers
                     </a>
                   </li>
                </a>
				<a class="nav-item">
                   <li style="text-decoration: none !important; color: white !important;" class="navbutton">
                     <a href="../credentials" style="text-decoration: none !important; color: white !important;" class="navtext">
                       Credentials
                     </a>
                   </li>
                </a>
				<a class="nav-item">
                   <li style="text-decoration: none !important; color: white !important;" class="navbutton">
                     <a href="../servers/new" style="text-decoration: none !important; color: white !important;" class="navtext">
                       Create Server
                     </a>
                   </li>
                </a>
				<a class="nav-item">
                   <li style="text-decoration: none !important; color: white !important;" class="navbutton">
                     <a href="../earn" style="text-decoration: none !important; color: white !important;" class="navtext">
                       Earn
                     </a>
                   </li>
                </a>
				<a class="nav-item">
                   <li style="text-decoration: none !important; color: white !important;" class="navbutton">
                     <a href="../store" style="text-decoration: none !important; color: white !important;" class="navtext">
                       Buy Resources
                     </a>
                   </li>
                </a>

<style>
.navbutton {
	color: white;
    padding: 10px;
    cursor: pointer;
    list-style-type: none;
    transition: height 0.4s, width 0.4s, background 0.4s;
    border-radius: 5px;
}

.navbutton:hover {
	color: white;
    border-radius: 5px;
    padding: 10px;
    cursor: pointer;
    background-color: #3B3B40;
    list-style-type: none;
}
</style>
			</nav>
			<main style="background-color: #212122;" class="content">
				<div class="container-fluid p-0">
<div class="row">
    <%
      let ram = 0;
      let disk = 0;
      let cpu = 0;
      let servers = pterodactyl.relationships.servers.data.length;
      for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) {
          ram = ram + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.memory == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
          disk = disk + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.disk == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
          cpu = cpu + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.cpu == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0);
      }
    %>
            <% if (req.query.err) { %>
<div class="modal">

  <!-- Modal content -->
  <div class="modal-content">
<center>
<img style="width: 140px; height:140px; box-shadow: none;" src="https://cdn.discordapp.com/attachments/987734229469253674/1007245670811439174/Copy_of_untitled_22.png" height=140 width=140><br><br><br>
  <h2 style="color: white;">Uh oh!</h2>
  <h4 style="color: #6c757d;">The instance could not be created, the API responded with the following error:</h4>
<code style="color: #6c757d;">
                <% if (req.query.err == "MISSINGVARIABLE") { %>
                    invalid instance info
                <% } else if (req.query.err == "NOTANUMBER") { %>
                    resources must be numbers
                <% } else if (req.query.err == "ERRORONCREATE") { %>
                    insufficient region capacity
                <% } else if (req.query.err == "BIGSERVERNAME") { %>
                    server name too long
                <% } else if (req.query.err == "TOOMUCHSERVERS") { %>
                    reached server limit
                <% } else if (req.query.err == "PREMIUMLOCATION") { %>
                    plan cannot access this location
                <% } else if (req.query.err == "TOOLITTLECOINS") { %>
                    backend issue
                <% } else { %>
                    <% if (req.query.num) { %>
                        <% if (!isNaN(parseFloat(req.query.num))) { %>
                            <% if (req.query.err == "TOOLITTLERAM" || req.query.err == "TOOLITTLEDISK" || req.query.err == "TOOLITTLECPU") { %>
                                software requries <b><%= req.query.num %></b>
                                <% if (req.query.err.slice(-3) == "RAM") { %>
                                    MB RAM
                                <% } else if (req.query.err.slice(-4) == "DISK") { %>
                                    MB disk
                                <% } else { // CPU %>
                                    % CPU
                                <% } %>
                            <% } else if (req.query.err == "TOOMUCHRAM" || req.query.err == "TOOMUCHDISK" || req.query.err == "TOOMUCHCPU") { %>
                                software type allows up to <b><%= req.query.num %></b>
                                <% if (req.query.err.slice(-3) == "RAM") { %>
                                    MB RAM
                                <% } else if (req.query.err.slice(-4) == "DISK") { %>
                                    MB disk
                                <% } else { // CPU %>
                                    % CPU
                                <% } %>
                            <% } else if (req.query.err == "EXCEEDRAM" || req.query.err == "EXCEEDDISK" || req.query.err == "EXCEEDCPU") { %>
                                insufficient resource balance
                            <% } else { %>
                                I won't mind to add a little easter egg here. :)
                            <% } %>
                        <% } else { %>
                            I won't mind to add a little easter egg here. :)
                        <% } %>
                    <% } else { %>
                        I won't mind to add a little easter egg here. :)
                    <% } %>
                <% } %>
         </code>
<br><br>
<a href="../servers/new" style="background: #3B3B40; border: none;" class="btn btn-secondary">Close</a>
  </div></center>

</div>
        <% } %>
<style>
body {font-family: Arial, Helvetica, sans-serif;}

/* The Modal (background) */
.modal {
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  background-color: #2b2b2d;
  border-radius: 5px;
  margin: auto;
  padding: 20px;
  border: 3px solid #38383b;
  width: 600px;
  animation: fadeInAnimation ease 0.8s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

        @keyframes fadeInAnimation {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}
</style>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div style="background-color: #2b2b2d; border: 3px solid #38383B;" class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <h6 class="card-title text-uppercase text-muted mb-0">YOUR CPU</h6>
              <div class="d-flex align-items-center align-self-start">
                <h3 style="color: white;" class="mb-0"><%= cpu %> / <%= packages.cpu + extraresources.cpu %>%</h3>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div style="background-color: #2b2b2d; border: 3px solid #38383B;" class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <h6 class="card-title text-uppercase text-muted mb-0">YOUR RAM</h5>
              <div class="d-flex align-items-center align-self-start">
                <h3 style="color: white;" class="mb-0"><%= ram %> / <%= packages.ram + extraresources.ram %>MB</h3>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div style="background-color: #2b2b2d; border: 3px solid #38383B;" class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <h6 class="card-title text-uppercase text-muted mb-0">YOUR DISK</h5>
              <div class="d-flex align-items-center align-self-start">
                <h3 style="color: white;" class="mb-0"><%= disk %> / <%= packages.disk + extraresources.disk %>MB</h3>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div style="background-color: #2b2b2d; border: 3px solid #38383B;" class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <h5 class="card-title text-uppercase text-muted mb-0">YOUR SLOTS</h5>
              <div class="d-flex align-items-center align-self-start">
                <h3 style="color: white;" class="mb-0"><%= servers %> / <%= packages.servers + extraresources.servers %></h3>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
</div>

<style>
body {font-family: Arial;}

/* Style the tab */
.tab {
  border-radius: 5px;
  overflow: hidden;
  border: 3px solid #38383B;
  background-color: #2b2b2d;
  color: white;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  margin-top: 5px;
  margin-left: 5px;
  margin-right: 5px;
  margin-bottom: 5px;
  border-radius: 10px;
  color: white;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #3b3b40;
  border-radius: 5px;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #3b3b40;
  border-radius: 5px;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 10px;
}
</style>
<div class="tab">
  <button class="tablinks" onclick="openStage(event, 'ServerName')" id="defaultOpen">Name</button>
  <button class="tablinks" onclick="openStage(event, 'Resources')">Resources</button>
  <button class="tablinks" onclick="openStage(event, 'Disks')">Disks</button>
  <button class="tablinks" onclick="openStage(event, 'Location')">Region</button>
  <button class="tablinks" onclick="openStage(event, 'Software')">Software</button>
  <button onclick="submitNew()" style="float: right; font-weight: bold; background-image: linear-gradient(to right, #6565d6, #009ACB); -webkit-text-fill-color: transparent; -webkit-background-clip: text;" class="tablinks">CREATE YOUR SERVER</button>
</div>
<div style="background-color: #2b2b2d; height: flex; margin-top: 25px; border: 3px solid #38383B; border-radius: 5px;">
<br>
                     <form class="forms-sample">
                      <div class="form-group">
<div id="ServerName" class="tabcontent">
                        <h3 style="color: white;">Choose a server name</h3>
                       <label style="color: #6c757d;">Name:</label>
                        <input style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" type="text" class="form-control" id="InputName">
                        <br>
                        <p class="text-muted">The server name must not contain spaces or symbols or it cannot be connected to our network.</p>
<br>
</div>

<div id="Resources" class="tabcontent">
                      <div class="form-group">
                        <h3 style="color: white;">Choose your resources</h3>
                        <label style="color: #6c757d;">RAM:</label>
                        <input style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" type="number" class="form-control" id="InputRAM" placeholder="2048"><br>
                        <label style="color: #6c757d;">CPU:</label>
                        <input style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" type="number" class="form-control" id="InputCPU" placeholder="80">
                      </div><br>
</div>

<div id="Disks" class="tabcontent">
                        <h3 style="color: white;">Choose your disk settings</h3>
                        <label style="color: #6c757d;">Size (MBs):</label>
                        <input style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" type="number" class="form-control" id="InputDisk" placeholder="10240"><br>
                        <label style="color: #6c757d;">Type:</label>
                        <div style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" class="form-control" id="TypeDisk">
<select style="background-color: #37373b; color: white; padding: 5px; border: none;">
<option value="">Enterprise HDD</option>
<option value="">NVMe SSD</option>
</select>
</div>
<br>
</div>

<div id="Location" class="tabcontent">
                        <h3 style="color: white;">Choose a server region</h3>
<label style="color: #6c757d;">General availability region zones:</label>
<div style="width: 75%;">
                      <script>
                      let inputLOCC = ""
                      function setINPLOC(num) {
                      	inputLOCC = num;
                        console.log(num)
                      }
                      </script>
              <% for (let [name, value] of Object.entries(settings.api.client.locations)) { %>
              
              <label style="margin-bottom: 15px;">
  			<input type="radio" name="InputLoc" value="<%= name %>" onclick="setINPLOC(<%= name %>)">
  			<img src="<%= value.banner %>">
			</label>
            &nbsp;&nbsp;&nbsp;
              
                <% } %>

<style>

/* HIDE RADIO */
[type=radio] { 
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
padding: 10px;
}

/* IMAGE STYLES */
[type=radio] + img {
  cursor: pointer;
  border-radius: 5px;
}

/* CHECKED STYLES */
[type=radio]:checked + img {
  background-color: #5f676e;
  border-radius: 5px;
  border: 1px solid white;
  box-shadow: 0 0 0 .1rem white
-webkit-box-shadow: 13px 25px 39px -30px rgba(255,255,255,1);
-moz-box-shadow: 13px 25px 39px -30px rgba(255,255,255,1);
box-shadow: 13px 25px 39px -30px rgba(255,255,255,1);
}
img {
width:210px;
height:60px;>
padding: 10px;
-webkit-box-shadow: 13px 25px 39px -19px rgba(0,0,0,0.7);
-moz-box-shadow: 13px 25px 39px -19px rgba(0,0,0,0.7);
box-shadow: 13px 25px 39px -19px rgba(0,0,0,0.7);
}

</style>
</div>
<br>
<label style="color: #6c757d;">Private region zones:</label>
<h4 style="color: #ce3922;"><img style="width: 20px; height: 20px;" src="https://cdn.discordapp.com/attachments/987734229469253674/1004692837658542100/Copy_of_untitled_9.png" width=20 height=20> No results found.</h4>
</div>

<div id="Software" class="tabcontent">
                        <h3 style="color: white;">Choose your server software</h3>
                       <label style="color: #6c757d;">Type:</label>
                        <select style="background-color: #37373B; border: none !important; color: white; padding: 10px; width: 400px;" class="form-control" id="InputEgg">
                          <% for (let [name, value] of Object.entries(settings.api.client.eggs)) { %>
                            <option value="<%= name %>"><%= value.display %></option>
                          <% } %>
                        </select>
<br>
</div>
                      </div>
                    </div>
				</div>

            </main>
    <script>
      async function submitNew() {
        let name = encodeURIComponent(document.getElementById("InputName").value);
        let egg = encodeURIComponent(document.getElementById("InputEgg").value);
        let ram = encodeURIComponent(document.getElementById("InputRAM").value);
        let disk = encodeURIComponent(document.getElementById("InputDisk").value);
        let cpu = encodeURIComponent(document.getElementById("InputCPU").value);
        let location = inputLOCC;
        document.location.href = `/create?name=${name}&egg=${egg}&ram=${ram}&disk=${disk}&cpu=${cpu}&location=${location}`;
      };
    </script>
<script>
function openStage(evt, cityName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}

// Get the element with id="defaultOpen" and click on it
document.getElementById("defaultOpen").click();
</script>

			<footer style="background-color: #29292B;" class="footer">
				<div class="container-fluid">
					<div class="row text-muted">
						<div class="col-4 text-start">
							<p class="mb-0">
								<a class="text-muted" target="_blank">© 2021 - 2022 <a class="text-white" href="https://hival.net">Hival</a>, All Rights Reserved.</a>
							</p>
						</div>
					</div>
				</div>
			</footer>
		</div>
	</div>

	<script src="../assets/js/app.js"></script>

	<script>
		document.addEventListener("DOMContentLoaded", function() {
			var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
			var gradient = ctx.createLinearGradient(0, 0, 0, 225);
			gradient.addColorStop(0, "rgba(215, 227, 244, 1)");
			gradient.addColorStop(1, "rgba(215, 227, 244, 0)");
			// Line chart
			new Chart(document.getElementById("chartjs-dashboard-line"), {
				type: "line",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "Sales ($)",
						fill: true,
						backgroundColor: gradient,
						borderColor: window.theme.primary,
						data: [
							2115,
							1562,
							1584,
							1892,
							1587,
							1923,
							2566,
							2448,
							2805,
							3438,
							2917,
							3327
						]
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 1000
							},
							display: true,
							borderDash: [3, 3],
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}]
					}
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			// Pie chart
			new Chart(document.getElementById("chartjs-dashboard-pie"), {
				type: "pie",
				data: {
					labels: ["Chrome", "Firefox", "IE"],
					datasets: [{
						data: [4306, 3801, 1689],
						backgroundColor: [
							window.theme.primary,
							window.theme.warning,
							window.theme.danger
						],
						borderWidth: 5
					}]
				},
				options: {
					responsive: !window.MSInputMethodContext,
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					cutoutPercentage: 75
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			// Bar chart
			new Chart(document.getElementById("chartjs-dashboard-bar"), {
				type: "bar",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "This year",
						backgroundColor: window.theme.primary,
						borderColor: window.theme.primary,
						hoverBackgroundColor: window.theme.primary,
						hoverBorderColor: window.theme.primary,
						data: [54, 67, 41, 55, 62, 45, 55, 73, 60, 76, 48, 79],
						barPercentage: .75,
						categoryPercentage: .5
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					scales: {
						yAxes: [{
							gridLines: {
								display: false
							},
							stacked: false,
							ticks: {
								stepSize: 20
							}
						}],
						xAxes: [{
							stacked: false,
							gridLines: {
								color: "transparent"
							}
						}]
					}
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			var markers = [{
					coords: [31.230391, 121.473701],
					name: "Shanghai"
				},
				{
					coords: [28.704060, 77.102493],
					name: "Delhi"
				},
				{
					coords: [6.524379, 3.379206],
					name: "Lagos"
				},
				{
					coords: [35.689487, 139.691711],
					name: "Tokyo"
				},
				{
					coords: [23.129110, 113.264381],
					name: "Guangzhou"
				},
				{
					coords: [40.7127837, -74.0059413],
					name: "New York"
				},
				{
					coords: [34.052235, -118.243683],
					name: "Los Angeles"
				},
				{
					coords: [41.878113, -87.629799],
					name: "Chicago"
				},
				{
					coords: [51.507351, -0.127758],
					name: "London"
				},
				{
					coords: [40.416775, -3.703790],
					name: "Madrid"
				}
			];
			var map = new jsVectorMap({
				map: "world",
				selector: "#world_map",
				zoomButtons: true,
				markers: markers,
				markerStyle: {
					initial: {
						r: 9,
						strokeWidth: 7,
						stokeOpacity: .4,
						fill: window.theme.primary
					},
					hover: {
						fill: window.theme.primary,
						stroke: window.theme.primary
					}
				},
				zoomOnScroll: false
			});
			window.addEventListener("resize", () => {
				map.updateSize();
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			var date = new Date(Date.now() - 5 * 24 * 60 * 60 * 1000);
			var defaultDate = date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
			document.getElementById("datetimepicker-dashboard").flatpickr({
				inline: true,
				prevArrow: "<span title=\"Previous month\">&laquo;</span>",
				nextArrow: "<span title=\"Next month\">&raquo;</span>",
				defaultDate: defaultDate
			});
		});
	</script>
<script>
var options = {
	classname: 'loadingbar',
    id: 'loadingbar'
};
var nanobar = new Nanobar( options );
nanobar.go( 30 );
nanobar.go( 76 );
nanobar.go(100);
</script>
<style>
.loadingbar .bar {
        background: white;
        border-radius: 4px;
        height: 4px;
}
</style>

</body>

</html>
